{"version":3,"sources":["src/index.js"],"names":["document","getElementById","innerHTML","weather","querySelector","searchBtn","cityField","forecastRow","dateElement","geolocateIcons","querySelectorAll","icons","printTodayDate","today","Date","insertAdjacentText","toLocaleString","weekday","year","month","day","getWeekDay","date","removeChildren","parent","firstChild","removeChild","renderForecast","forecast","forEach","weatherData","markup","dt","icon","Math","floor","main","temp","insertAdjacentHTML","getForecast","url","fetch","then","response","json","data","list","filter","obj","dt_txt","endsWith","getCityWeather","name","sys","country","humidity","wind","speed","catch","error","console","log","getWeatherByCoordinates","latitude","longitude","getForecastByCoordinates","getWeatherByCity","city","getForecastByCity","geosuccess","position","coords","addEventListener","e","preventDefault","value","navigator","geolocation","getCurrentPosition","alert"],"mappings":"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","file":"src.440ed7c5.js","sourceRoot":"..","sourcesContent":["import \"./styles.css\";\n\ndocument.getElementById(\"app\").innerHTML = `\n<header class=\"header\">\n  <div class=\"row\">\n    <div class=\"header__logo\">\n     <h2><a href=\"#\">Aesthetic Weather App</h2>\n    </div>\n    <p class=\"header__date\">\n    </p>\n    <div class=\"header__search\">\n     <a title=\"geolocate\" href=\"#\" class=\"header__geolocate\" ><svg class=\"icon icon-target\"><use xlink:href=\"#icon-target\"></use></svg></a>\n     <form class=\"header__form\">\n     <input type=\"search\" placeholder=\"Type city name\" class=\"header__search\">\n     <button class=\"btn btn-primary\" role=\"search\"><svg class=\"icon icon-search\"><use xlink:href=\"#icon-search\"></use></svg></button>\n     </div>\n    </div>\n  </div>\n</header>\n<main class=\"weather\">\n   <h1 class=\"weather__message\">Please enter the name of the city or click on the  \n     <a title=\"geolocate\" href=\"#\" class=\"header__geolocate\"><svg  class=\"icon icon-target\"><use xlink:href=\"#icon-target\"></use></svg></a> to get your location\n  </h1>\n</main>\n\n<section class=\"forecast\">\n <div class=\"row\">\n </div>\n</section>\n<svg aria-hidden=\"true\" style=\"position: absolute; width: 0; height: 0; overflow: hidden;\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<defs>\n<symbol id=\"icon-search\" viewBox=\"0 0 32 32\">\n<title>search</title>\n<path d=\"M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z\"></path>\n</symbol>\n<symbol id=\"icon-target\" viewBox=\"0 0 32 32\">\n<title>target</title>\n<path d=\"M32 14h-3.154c-0.864-5.57-5.276-9.982-10.846-10.846v-3.154h-4v3.154c-5.57 0.864-9.982 5.276-10.846 10.846h-3.154v4h3.154c0.864 5.57 5.276 9.982 10.846 10.846v3.154h4v-3.154c5.57-0.864 9.982-5.276 10.846-10.846h3.154v-4zM24.776 14h-3.118c-0.603-1.705-1.953-3.056-3.658-3.658v-3.118c3.36 0.765 6.010 3.416 6.776 6.776zM16 18c-1.105 0-2-0.895-2-2s0.895-2 2-2c1.105 0 2 0.895 2 2s-0.895 2-2 2zM14 7.224v3.118c-1.705 0.603-3.056 1.953-3.658 3.658h-3.118c0.765-3.36 3.416-6.010 6.776-6.776zM7.224 18h3.118c0.603 1.705 1.953 3.056 3.658 3.658v3.118c-3.36-0.765-6.010-3.416-6.776-6.776zM18 24.776v-3.118c1.705-0.603 3.056-1.953 3.658-3.658h3.118c-0.765 3.36-3.416 6.010-6.776 6.776z\"></path>\n</symbol>\n</defs>\n</svg>\n`;\nconst weather = document.querySelector(\".weather\");\nconst searchBtn = document.querySelector('button[role=\"search\"]');\nconst cityField = document.querySelector('input[type=\"search\"]');\nconst forecastRow = document.querySelector(\".forecast > .row\");\nconst dateElement = document.querySelector(\".header__date\");\nconst geolocateIcons = document.querySelectorAll(\".header__geolocate\");\n\nconst icons = {\n  \"01d\": \"wi-day-sunny\",\n  \"02d\": \"wi-day-cloudy\",\n  \"03d\": \"wi-cloud\",\n  \"04d\": \"wi-cloudy\",\n  \"09d\": \"wi-showers\",\n  \"10d\": \"wi-rain\",\n  \"11d\": \"wi-thunderstorm\",\n  \"13d\": \"wi-snow\",\n  \"50d\": \"wi-fog\",\n  \"01n\": \"wi-night-clear\",\n  \"02n\": \"wi-night-alt-cloudy\",\n  \"03n\": \"wi-cloud\",\n  \"04n\": \"wi-night-cloudy\",\n  \"09n\": \"wi-night-showers\",\n  \"10n\": \"wi-night-rain\",\n  \"11n\": \"wi-night-thunderstorm\",\n  \"13n\": \"wi-night-alt-snow\",\n  \"50n\": \"wi-night-fog\"\n};\nfunction printTodayDate() {\n  const today = new Date();\n  const options = {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\"\n  };\n  dateElement.insertAdjacentText(\n    \"afterbegin\",\n    today.toLocaleString(\"en-us\", options)\n  );\n}\n\nfunction getWeekDay(date) {\n  const options = { weekday: \"long\" };\n  return date.toLocaleString(\"en-us\", options);\n}\n\nfunction removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\nfunction renderForecast(forecast) {\n  removeChildren(forecastRow);\n  forecast.forEach((weatherData) => {\n    const markup = `<div class=\"forecast__day\">\n     <h3 class=\"forecast__date\">${getWeekDay(\n       new Date(weatherData.dt * 1000)\n     )}</h3>\n     <i class='wi ${icons[weatherData.weather[0].icon]} forecast__icon'></i>\n     <p class=\"forecast__temp\">${Math.floor(weatherData.main.temp)}°C</p>\n     <p class=\"forecast__desc\">${weatherData.weather[0].main}</p>\n   </div>`;\n    forecastRow.insertAdjacentHTML(\"beforeend\", markup);\n  });\n}\n\nfunction getForecast(url) {\n  fetch(url)\n    .then((response) => response.json())\n    .then((data) => {\n      const forecastData = data.list.filter((obj) =>\n        obj.dt_txt.endsWith(\"06:00:00\")\n      );\n      renderForecast(forecastData);\n    });\n}\nfunction getCityWeather(url) {\n  fetch(url)\n    .then((response) => response.json())\n    .then((data) => {\n      const markup = `<h1 class=\"location\">${data.name}, ${\n        data.sys.country\n      }</h1>\n <div class=\"weather__summary\">\n    <p><i class=\"wi ${\n      icons[data.weather[0].icon]\n    } weather-icon\"></i> <span class=\"weather__celsius-value\">${Math.floor(\n        data.main.temp\n      )}°C</span></p>\n    <p>${data.weather[0].main}</p>\n    <ul class=\"weather__miscellaneous\">\n    <li><i class=\"wi wi-humidity\"></i> Humidity  <span>${\n      data.main.humidity\n    }%</span></li>\n    <li><i class=\"wi wi-small-craft-advisory\"></i> Wind Speed <span>${\n      data.wind.speed\n    } m/s</span></li>\n    </ul>\n </div>\n `;\n      removeChildren(weather);\n      weather.insertAdjacentHTML(\"beforeend\", markup);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n}\nfunction getWeatherByCoordinates(latitude, longitude) {\n  getCityWeather(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&APPID=9cb72bec958f8fb02391985ed7b219d2\n&units=metric`);\n}\nfunction getForecastByCoordinates(latitude, longitude) {\n  getForecast(`https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&APPID=9cb72bec958f8fb02391985ed7b219d2\n&units=metric`);\n}\nfunction getWeatherByCity(city) {\n  getCityWeather(`https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=9cb72bec958f8fb02391985ed7b219d2\n&units=metric`);\n}\nfunction getForecastByCity(city) {\n  getForecast(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=9cb72bec958f8fb02391985ed7b219d2\n&units=metric`);\n}\n\nfunction geosuccess(position) {\n  const { latitude, longitude } = position.coords;\n  getWeatherByCoordinates(latitude, longitude);\n  getForecastByCoordinates(latitude, longitude);\n}\n\nprintTodayDate();\nsearchBtn.addEventListener(\"click\", (e) => {\n  e.preventDefault();\n  getWeatherByCity(cityField.value);\n  getForecastByCity(cityField.value);\n});\n\ngeolocateIcons.forEach((icon) => {\n  icon.addEventListener(\"click\", (e) => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(geosuccess);\n    } else {\n      alert(\"Your browser does not support geolocation\");\n    }\n  });\n});\n"]}